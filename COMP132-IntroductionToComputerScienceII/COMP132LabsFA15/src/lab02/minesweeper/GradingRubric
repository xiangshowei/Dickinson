132 Lab Grading Rubric

  22 / 26	- Correctness
	 Test Name:								Passes	Fails
  	-------------------------------------------------------
		testConstructor								X
		testConstructorInvalidParam			X
		testGetCellInvalid					X
		testGetCellValid					X
		testNumAdjMines						X
		testUncoverMine						X
		testUncoverValid					X
		testUncoverFlaggedCell						X
		testUncoverFlaggedMine						X
		testUncoverInvalid							X
		testFlagMine						X
		testFlagRegularCell					X
		testFlagUncoveredCell				X
		testUnFlagRegular					X
		testUnFlagMine						X
		testFlagInvalid						X
		testNumAdjMinesWithFlagedMines		X
		testNumAdjMinesWithUncoveredMine	X
		testRevealBoard						X
		testGameLostNot								X
		testGameLostTrue					X
		testGameNotWonNotAllUncovered		X
		testGameNotWonMinesNotFlagged		X
		testGameWonTrue						X

	* The game doesn't seem to work correctly when I try to actually
	  play it.  It appears that I can click on any cell without a mine
	  and it simply is not uncovered.  But if I click on a cell with
	  a mine, it seems like the program goes into an infinite loop.
	  
  1.5 / 3 	- Code Quality
	* Constructor contains a good bit of repeated code.  Can it
  	  be refactored to eliminate the repetition?
  	  
  	* Constructor may not place the correct number of mines.  It is possible
      that the random row/col selected already contains a mine.  So the new
      mine will be placed over the old one.  The result is fewer mines than
      there should be.  Consider using a while loop and looping until the right
      number of mines have been placed.
      
	* In getRows, why not just return msb.length?
	
	* The uncoverCell method should not uncover a cell that contains
	  a flag.  The idea is that the user puts a flag on a cell to avoid
	  accidentally uncovering it.	
 
	* The gameWon method can be more easily implemented by checking
	if the game has not been won (i.e. there is a misplaced flag, or 
	a covered cell.).  Then return the opposite.
	       
  2.5 / 3 	- Documentation / Readability
  	* numAdjacentMines is pretty complicated a brief explanation of
  	  how it is working might help a human reader.
  	    
  2.5 / 3	- Testing Quality
  	* The gameWon method could be tested a bit more thoroughly.
  	
  0 / 0 	- Bonus Features
  		x/1 - JUnit test for random mine placement
  		x/1 - Uncover immediately adjacent cells when possible
  		x/3 - Uncover all contiguous 0 cells
=====
 
  28.5 / 35	- Total Score
  81%
  
=====